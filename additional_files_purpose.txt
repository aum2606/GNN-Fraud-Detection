# Purpose of Additional Files in the GNN Fraud Detection Project

This document explains the purpose of files not included in the main project_files.txt list.

## Legacy/Alternative Implementation Files

1. **preprocess_data.py**
   - Purpose: Original preprocessing script for the Elliptic Bitcoin dataset without PyTorch Geometric dependencies
   - This is a standalone preprocessing script that was likely used before integrating with PyTorch Geometric
   - Can be removed as src/data/dataset.py now handles data loading and preprocessing

2. **run_inference.py**
   - Purpose: Original inference script for the Random Forest model
   - Contains functions for loading the Random Forest model and making predictions
   - References "rf_model.pkl" which indicates it was used with a Random Forest model
   - Can be removed as it's been replaced by inference.py and simple_inference.py for GNN models

3. **compare_models.py**
   - Purpose: Script to compare different models and generate comparison charts
   - Similar to compare_gnn_models.py but may have been used for comparing different types of models
   - Can be removed if compare_gnn_models.py covers all needed comparison functionality

## Additional Utility Scripts

1. **inference.py**
   - Purpose: More comprehensive inference script for GNN models
   - Provides detailed functionality for making predictions on transactions
   - Complements simple_inference.py which is a simplified version
   - Could be kept as an alternative to simple_inference.py for more advanced use cases

2. **generate_report.py**
   - Purpose: Script to generate comprehensive HTML reports of model performance
   - Uses src/utils/report.py to load metrics and generate reports
   - Useful for creating detailed documentation of model performance
   - Could be kept for documentation purposes

## Data Files

1. **elliptic_bitcoin_dataset/**
   - Purpose: Contains the raw Elliptic Bitcoin dataset files
   - Essential for running the project from scratch
   - Includes:
     - elliptic_txs_classes.csv: Transaction class labels
     - elliptic_txs_edgelist.csv: Transaction edges
     - elliptic_txs_features.csv: Transaction features

2. **processed_data/**
   - Purpose: Contains preprocessed data files
   - Generated by the preprocessing scripts
   - Includes:
     - Feature statistics (mean, std)
     - Node indices and mappings
     - Train/val/test masks
     - Processed features, edges, and labels

3. **data/processed/**
   - Purpose: Contains PyTorch Geometric processed data files
   - Generated by PyTorch Geometric data loading
   - Includes:
     - data.pt: Processed PyTorch Geometric data object
     - pre_filter.pt and pre_transform.pt: PyTorch Geometric processing information

## Documentation Files

1. **dataset_analysis_report.md**
   - Purpose: Detailed analysis of the Elliptic Bitcoin dataset
   - Contains statistics, visualizations, and insights about the data
   - Useful for understanding the dataset characteristics

2. **fraud_detection_report.md**
   - Purpose: Report on the performance of the fraud detection models
   - Contains metrics, visualizations, and analysis of model performance
   - Useful for understanding model effectiveness

## Output Files

1. **results/**
   - Purpose: Directory containing model outputs and visualizations
   - Includes:
     - Trained model files (.pt)
     - Performance visualizations (confusion matrices, ROC curves, etc.)
     - Graph visualizations
     - Metrics text files

## Conclusion

The files not included in the main project_files.txt list fall into several categories:
1. Legacy/alternative implementations that can be removed
2. Additional utility scripts that provide complementary functionality
3. Data files that are essential for running the project
4. Documentation files that provide insights into the dataset and model performance
5. Output files that are generated by the project scripts

When cleaning up the project, the legacy/alternative implementation files can be safely removed, while the other files should be kept for their respective purposes.
